--DataXQuery--
  aa1_2_1 = SELECT
        AVG(Humidity) AS Humidity_AVG,
        MIN(Temperature) AS Temperature_MIN,
        MAX(Temperature) AS Temperature_MAX,
        DeviceId,
        COUNT(*) AS Count  
    FROM
        Foo  
    GROUP BY
        DeviceId
    
--DataXQuery--
  aa2_2_1 = SELECT
        *,
        MAP(
            'ruleId',
            'R41',
            'ruleDescription',
            'Detects hot condition average',
            'severity',
            'Critical',
            'Tag',
            'Anomaly'
        ) AS RuleObject 
    FROM
        aa1_2_1 
    WHERE
        Humidity_AVG > 40 
        AND Temperature_MIN > 80
    
--DataXQuery--
  aa3_2_1 = SELECT
        MAP(
            'DeviceId',
            DeviceId    
        ) AS pivots,
        MAP(
            'Humidity',
            MAP(
                'AVG',
                Humidity_AVG
            ),
            'Temperature',
            MAP(
                'MIN',
                Temperature_MIN,
                'MAX',
                Temperature_MAX
            )  
        ) AS aggs,
        Count AS count,
        MAP(
            'ruleId',
            'R41',
            'Tag',
            'Anomaly',
            'description',
            'Detects hot condition average',
            'severity',
            'Critical'    
        ) AS result 
    FROM
        aa2_2_1
    
--DataXQuery--
  AnomalyAlert = SELECT
        DISTINCT DATE_TRUNC('second',
        current_timestamp()) AS EventTime,
        'AnomalyAlert' AS MetricName,
        0 as Metric,
        'P5' AS Product,
        RuleObject.ruleDescription AS Pivot1 
    FROM
        aa2_2_1
    
    
--DataXQuery--
  sa1_1_1 = SELECT
        *,
        'R21' AS ruleId,
        'Detects cold condition' AS ruleDescription,
        'Critical' AS severity,
        'Cold' AS Tag 
    FROM
        Foo  
    WHERE
        Temperature < 40
    
--DataXQuery--
  sa2_1_1 = SELECT
        * 
    FROM
        sa1_1_1
    
--DataXQuery--
  ColdAlert = SELECT
        DISTINCT DATE_TRUNC('second',
        current_timestamp()) AS EventTime,
        'ColdAlert' AS MetricName,
        0 as Metric,
        'P5' AS Product,
        'Detects cold condition' AS Pivot1 
    FROM
        sa1_1_1