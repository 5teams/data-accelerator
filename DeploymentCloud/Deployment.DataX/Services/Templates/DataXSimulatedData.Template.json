{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "serviceFabricName": {
            "type": "string",
            "metadata": {
                "description": "Name of your sfcluster"
            }
        },
        "applicationTypeName": {
            "type": "string",
            "defaultValue": "DataX.SimulatedDataType",
            "metadata": {
                "description": "The application type name"
            }
        },
        "applicationTypeVersion": {
            "type": "string",
            "defaultValue": "1",
            "metadata": {
                "description": "The application type version"
            }
        },
        "appPackageUrl": {
            "type": "string",
            "metadata": {
                "description": "The URL to the application package zip file"
            }
        },
        "applicationName": {
            "type": "string",
            "defaultValue": "DataX.SimulatedData",
            "metadata": {
                "description": "The application name"
            }
        },
        "sfAppParameters": {
            "type": "object",
            "metadata": {
                "description": "Service Fabric app parameters."
            }
        },
        "sfPkgName": {
            "type": "string",
            "metadata": {
                "description": "Service fabric package name is needed for automation"
            }
        }
    },
    "variables": {
        "clusterName": "[parameters('serviceFabricName')]",
        "clusterLocation": "[resourcegroup().location]"
    },
    "resources": [{
            "apiVersion": "2017-07-01-preview",
            "type": "Microsoft.ServiceFabric/clusters/applicationTypes",
            "name": "[concat(variables('clusterName'), '/', parameters('applicationTypeName'))]",
            "location": "[variables('clusterLocation')]",
            "dependsOn": [],
            "properties": {
                "provisioningState": "Default"
            }
        },
        {
            "apiVersion": "2017-07-01-preview",
            "type": "Microsoft.ServiceFabric/clusters/applicationTypes/versions",
            "name": "[concat(variables('clusterName'), '/', parameters('applicationTypeName'), '/', parameters('applicationTypeVersion'))]",
            "location": "[variables('clusterLocation')]",
            "dependsOn": [
                "[concat('Microsoft.ServiceFabric/clusters/', variables('clusterName'), '/applicationTypes/', parameters('applicationTypeName'))]"
            ],
            "properties": {
                "provisioningState": "Default",
                "appPackageUrl": "[parameters('appPackageUrl')]"
            }
        },
        {
            "apiVersion": "2017-07-01-preview",
            "type": "Microsoft.ServiceFabric/clusters/applications",
            "name": "[concat(variables('clusterName'), '/', parameters('applicationName'))]",
            "location": "[variables('clusterLocation')]",
            "dependsOn": [
                "[concat('Microsoft.ServiceFabric/clusters/', variables('clusterName'), '/applicationTypes/', parameters('applicationTypeName'), '/versions/', parameters('applicationTypeVersion'))]"
            ],
            "properties": {
                "provisioningState": "Default",
                "typeName": "[parameters('applicationTypeName')]",
                "typeVersion": "[parameters('applicationTypeVersion')]",
                "parameters": "[parameters('sfAppParameters')]",
                "upgradePolicy": {
                    "upgradeReplicaSetCheckTimeout": "01:00:00.0",
                    "forceRestart": "false",
                    "rollingUpgradeMonitoringPolicy": {
                        "healthCheckWaitDuration": "00:00:10.0",
                        "healthCheckStableDuration": "00:00:10.0",
                        "healthCheckRetryTimeout": "00:05:00.0",
                        "upgradeTimeout": "00:20:00.0",
                        "upgradeDomainTimeout": "00:10:00.0"
                    },
                    "applicationHealthPolicy": {
                        "considerWarningAsError": "false",
                        "maxPercentUnhealthyDeployedApplications": "50",
                        "defaultServiceTypeHealthPolicy": {
                            "maxPercentUnhealthyServices": "50",
                            "maxPercentUnhealthyPartitionsPerService": "50",
                            "maxPercentUnhealthyReplicasPerPartition": "50"
                        }
                    }
                }
            }
        }
    ]
}